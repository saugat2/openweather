{"ast":null,"code":"var _jsxFileName = \"D:\\\\kali_scss\\\\src\\\\Component\\\\Location.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Location = () => {\n  _s();\n  const [lat, setLat] = useState([]);\n  const [long, setLong] = useState([]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n    console.log(\"Latitude is:\", lat);\n    console.log(\"Longitude is:\", long);\n  }, [lat, long]);\n  // const[city,setCity] = useState(null);\n  // const[search,setSearch]=useState(\"kathmandu\");\n  // useEffect(() => {\n  //   const fetchApi_=async() =>{\n  //     const url = 'http://api.openweathermap.org/geo/1.0/direct?q=${search}&limit=5&appid=b3e379e471a4e9f2f5754c62500cf6ed'\n  //     const response = await fetch(url);\n  //     console.log(response);\n  //   }\n  //   fetchApi_();\n  // });\n  // useEffect(() => {\n  //   const fetchApi=async() =>{\n  //     const url = 'https://api.openweathermap.org/data/2.5/weather?q=${search}&appid=b3e379e471a4e9f2f5754c62500cf6ed';\n  //     const response = await fetch(url);\n  //     console.log(response);\n  //   }\n  //   fetchApi();\n  // });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-forcast\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        name: \"city\",\n        onChange: event => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Location, \"7q1HsI+objvXcfipZrnuaCD+j/U=\");\n_c = Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["React","useState","useEffect","Location","lat","setLat","long","setLong","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","event"],"sources":["D:/kali_scss/src/Component/Location.jsx"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\n\r\nexport const Location = () => {\r\n  const [lat, setLat] = useState([]);\r\n  const [long, setLong] = useState([]);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(function(position) {\r\n      setLat(position.coords.latitude);\r\n      setLong(position.coords.longitude);\r\n    });\r\n\r\n    console.log(\"Latitude is:\", lat)\r\n    console.log(\"Longitude is:\", long)\r\n  }, [lat, long]);\r\n  // const[city,setCity] = useState(null);\r\n  // const[search,setSearch]=useState(\"kathmandu\");\r\n  // useEffect(() => {\r\n  //   const fetchApi_=async() =>{\r\n  //     const url = 'http://api.openweathermap.org/geo/1.0/direct?q=${search}&limit=5&appid=b3e379e471a4e9f2f5754c62500cf6ed'\r\n  //     const response = await fetch(url);\r\n  //     console.log(response);\r\n  //   }\r\n  //   fetchApi_();\r\n  // });\r\n  // useEffect(() => {\r\n  //   const fetchApi=async() =>{\r\n  //     const url = 'https://api.openweathermap.org/data/2.5/weather?q=${search}&appid=b3e379e471a4e9f2f5754c62500cf6ed';\r\n  //     const response = await fetch(url);\r\n  //     console.log(response);\r\n  //   }\r\n  //   fetchApi();\r\n  // });\r\n  return (\r\n    <div className=\"box\">\r\n    \r\n    <div className='weather-forcast'>\r\n    <input type=\"search\" name=\"city\" onChange={(event)=>{}}/>\r\n    <button type=\"submit\">Submit</button>\r\n    </div>\r\n    <div className=\"result\">\r\n      <h2 className='location'>\r\n        \r\n      </h2>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAA;AAE9C,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAC5B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACdM,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,UAASC,QAAQ,EAAE;MAC1DN,MAAM,CAACM,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;MAChCN,OAAO,CAACI,QAAQ,CAACC,MAAM,CAACE,SAAS,CAAC;IACpC,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEZ,GAAG,CAAC;IAChCW,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEV,IAAI,CAAC;EACpC,CAAC,EAAE,CAACF,GAAG,EAAEE,IAAI,CAAC,CAAC;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAEpB;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAChC;QAAO,IAAI,EAAC,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAGW,KAAK,IAAG,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eACzD;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B,eACN;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACrB;QAAI,SAAS,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA;IAEnB;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEV,CAAC;AAAA,GA7CYd,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}